[{"C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\reportWebVitals.ts":"1","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\IsPet.tsx":"2","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\PriceCut.tsx":"3","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\IsNew.tsx":"4","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\App.tsx":"5","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\IsTobacco.tsx":"6","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\IsWritten.tsx":"7","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\IsDamaged.tsx":"8","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\ButtonAppBar.tsx":"9","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\index.tsx":"10"},{"size":440,"mtime":1610170426987,"results":"11","hashOfConfig":"12"},{"size":3433,"mtime":1610608022950,"results":"13","hashOfConfig":"12"},{"size":1417,"mtime":1610610161529,"results":"14","hashOfConfig":"12"},{"size":1393,"mtime":1610610181183,"results":"15","hashOfConfig":"12"},{"size":4124,"mtime":1610627441839,"results":"16","hashOfConfig":"12"},{"size":1131,"mtime":1610610493914,"results":"17","hashOfConfig":"12"},{"size":4579,"mtime":1610609928770,"results":"18","hashOfConfig":"12"},{"size":2453,"mtime":1610608829086,"results":"19","hashOfConfig":"12"},{"size":1268,"mtime":1610627557129,"results":"20","hashOfConfig":"12"},{"size":517,"mtime":1610170426983,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yf2420",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\reportWebVitals.ts",[],"C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\IsPet.tsx",[],"C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\PriceCut.tsx",["44"],"C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\IsNew.tsx",["45"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\ninterface IsNewProps {\r\n  setIsNewText: (text: string) => void;\r\n}\r\nconst IsNew: React.FC<IsNewProps> = (props) => {\r\n  const handleIsNew = () => {\r\n    setIsNew(!isNew);\r\n  };\r\n  const [isNew, setIsNew] = useState<boolean>(true);\r\n  const isNewText: string = isNew\r\n    ? \"新品で購入した本です。\\n\\n\"\r\n    : \"新品で購入したものではありません。\\n\\n\";\r\n  useEffect(() => {\r\n    props.setIsNewText(isNewText);\r\n  }, [isNew]);\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item>\r\n          <span>Q2:新品で購入したものですか？</span>\r\n\r\n          {isNew ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleIsNew}\r\n              size=\"small\"\r\n            >\r\n              YES\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={handleIsNew}\r\n              size=\"small\"\r\n            >\r\n              NO\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IsNew;\r\n","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\App.tsx",[],"C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\IsTobacco.tsx",["46"],"C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\IsWritten.tsx",[],"C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\IsDamaged.tsx",["47"],"import React, { useState, useEffect } from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\ninterface IsDamagedProps {\r\n  setIsDamagedText: (text: string) => void;\r\n}\r\nconst IsDamaged: React.FC<IsDamagedProps> = (props) => {\r\n  const [value, setValue] = useState<string>(\"ほぼない\");\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(event.target.value);\r\n  };\r\n  useEffect(() => {\r\n    switch (value) {\r\n      case \"no\":\r\n        props.setIsDamagedText(\"本に傷はほとんどありません。\\n\\n\");\r\n        break;\r\n      case \"little\":\r\n        props.setIsDamagedText(\"本にかすり傷あります。\\n\\n\");\r\n        break;\r\n      case \"large\":\r\n        props.setIsDamagedText(\r\n          \"本にかなり傷がありますのでご注意ください。\\n\\n\"\r\n        );\r\n        break;\r\n      case \"check\":\r\n        props.setIsDamagedText(\r\n          \"本の傷については、お手数ですが写真をご確認ください。\\n\\n\"\r\n        );\r\n        break;\r\n    }\r\n  }, [value]);\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n      >\r\n        <Grid item>\r\n          <p>Q3:本に傷はありますか？</p>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup\r\n              aria-label=\"gender\"\r\n              value={value}\r\n              onChange={handleChange}\r\n            >\r\n              <FormControlLabel\r\n                value=\"no\"\r\n                control={<Radio />}\r\n                label=\"ほぼない\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"little\"\r\n                control={<Radio />}\r\n                label=\"かすり傷\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"large\"\r\n                control={<Radio />}\r\n                label=\"目立つ傷\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"check\"\r\n                control={<Radio />}\r\n                label=\"写真を確認\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default IsDamaged;\r\n","C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\components\\ButtonAppBar.tsx",[],"C:\\Users\\hirai\\Documents\\Programing\\portfolio-react\\src\\index.tsx",[],{"ruleId":"48","severity":1,"message":"49","line":18,"column":6,"nodeType":"50","endLine":18,"endColumn":13,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":18,"column":6,"nodeType":"50","endLine":18,"endColumn":13,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":12},{"ruleId":"48","severity":1,"message":"58","line":34,"column":6,"nodeType":"50","endLine":34,"endColumn":13,"suggestions":"59"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'priceCutText'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useEffect has missing dependencies: 'isNewText' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["61"],"@typescript-eslint/no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["62"],{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [priceCutText, props]",{"range":"69","text":"70"},"Update the dependencies array to be: [isNew, isNewText, props]",{"range":"71","text":"72"},"Update the dependencies array to be: [props, value]",{"range":"73","text":"74"},[564,571],"[priceCutText, props]",[530,537],"[isNew, isNewText, props]",[1110,1117],"[props, value]"]